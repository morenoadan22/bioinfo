import sys
import dna.utils as utils
import suffix_array as sa


def inverse_burrows(text):
    my_list = sorted(list(text))
    for i in range(len(text) - 1):
        my_list = sorted([text[i] + my_list[i] for i in range(len(s))])
    return my_list[0][1:] + my_list[0][0]


if __name__ == '__main__':
    s = 'TGTTGGAGGTTAAGTTGTCCGTGGTCCGGACCCATAAGTAGTACTGGCTCGCATCACCTTCCGTAAGGTTTATGGCAATATGGAAGTATACCCTAACTCTTTTAGTCAATCTTGGACAGATTAGCTCCTCGTTGATGCACCCCTTGAGCGCTCAGCTCCGCACGCGGGACCCGCTCTGCCTGTGTTCCTCCGACAAAGAAAAGGCACTGGAGCGATACAATGCGCTGTTTCCACGTCGGACTCCATGCGCAGCAGCATCAAGAATCTAGCGACGAGAACGGTGACCCAATCGTAGCGAACTTTGATTCGTTGAGGAACCCTCCATCGTCTGGTATTTGATGATTGTTGGCTGTCTTCGTCCACCAGGGACGTATTCGTACTGATGATGAGAGGTTATACAATCCAGTGAGTTGTCTGACCGGTTGATAGGATTTAGGTTAACTCTCAAAAACAATGCTGACGAAACTGTGCATTATAAGCAAGGTTCGGTAGGAG$ACAAGAGTGAGGGGGCAGTATTTATCCGTTCGCCCGTCCTCACGCTAGCCGGAGCAACCCCGTGTAGGATAAAGTAGTCGGGCTCTGAACGGCGGTGACTGATAACTTCGGCGTCCGAAACCTGGGTGCTATTTAGAGGGAGGATTTTACCACAGTACCTTTTTTACCGGCGTGGCTGCCCTCCGCTGTCTTCAATTCTGTACATAAAGACAGACGAGGCCATTCCTGCGATTATTAGTCCACCGCTTCCGGGCGACTGCTCATGTGCTCAGACGCAGAAAACACAAAGTAAGAGAAGGGTCTGGCTTCCATTTAGTTAACGGTCTCGGCTACTCCCTAACAGCAGCTGTATACCAATGCACCGCCCTGGAAACATATGAAGATGTATTATGGGCGCGAAGTACTCTCGCGTTCTCCACTCCGAGTAGAA'

    if len(sys.argv) >= 2:
        s = utils.read_file(sys.argv[1]).strip()

    print(inverse_burrows(s))

    expected = 'GATAATTATCGCAACGTATTAGCAGGTTCGCGCGTCTAACGAGCGTGTGGGAAATACATCCTCCCACATAATCTGTCCGGGTGTACCCAAGCTCTCCATCGGGGCCCCATACGTTCATGTACTTGACCCGGAGACCAAGGAAAATAACCGGGAGAGAATTCTGTCACCGCCATTTTGGGAATGGTCTCACTGAGGGGAGCTGGTAATGGATCGAATGTTGGCTATCGCATTAACTTGCAGCAATTCTCTGCAGAACGTTACTGCATACCAGGCGACGTCTCAAGATCCCAGCACTGCCTACGTGTCCTGTCGTATCATAACTACACTACTGTCGCGCATAGAACTATCGCGTTAGATAAGTACAGTATGTTAACCAGTTTGTCGTGTGATGGGATTTCTTTCACAATGGAACCTTCCATTTGGGGGGGTGGACGGCTGAGATCCTTTAAATGCTCCTAGGCGTAGCGTGGCCACTACGCTATAGGTGCACAGGGGAGGCTCTGAATGAAGACTTGCGCCAGACGGATAATGCTCAACGGGCATCGCCCGGAGTAGAAATGAAAGGGCGGCGCCCGTCCATCAACTTTATCGAAAGAGGTAACACAGTCCACAGATCGTCCCGCGAACATCGGGCACAGGATGGGTGACATTCTCCGCGTTTCTGGCGGATTTTAGCTGCATGGTCAACTTTAGATGTTCCACTACTGGGTTCAGGATGTTCTATCCTTCTTCTACCAATTACTGTCGGGGATTACTAGTATTTAGAACTCGATAGATACAGGTCTGTTGCATCTGCTGCCCGCGTTCTGGAGTTTGAGCGCCAGGAATCGTGACATAGCGGGATGCAGCTGTACGAAGACCCTAGGCTCAGTCTAAACATCGCCTCGCATCCCGCGGATTAAACAGCCTCTACTTGTACCACTTT$'

    print(inverse_burrows(s) == expected)
